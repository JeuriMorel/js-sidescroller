import{ANGRY_EGG_HEIGHT as t,ANGRY_EGG_WIDTH as i,GHOST_WIDTH as h,GHOST_HEIGHT as s,CRAWLER_WIDTH as e,CRAWLER_HEIGHT as a,SOUND_CRACKS_1 as r,SOUND_CRACKS_2 as o,SOUND_GHOST_DIE as d,BEE_WIDTH as n,BEE_HEIGHT as f,SOUND_CLAW_STRIKE as g,SOUND_PUMP_DIE as m,DEFENCE_DEBUFF as l,AttackTarget as p,AttackTypes as y}from"./constants.js";import{Boom as x,Smoke as u}from"./particles.js";import{HealthBar as c}from"./health_bar.js";import{Pumpkin_Explode as w,Pumpkin_Idle as b,Pumpkin_Walk as M,PUMPKIN_STATES as v}from"./pumpkin_states.js";import{FloatingMessage as z}from"./UI.js";export const EnemyNames={ANGRY_EGG:"AngryEgg",CRAWLER:"Crawler",SPAWN:"Spawn",GHOST:"Ghost",BEE:"Bee",PUMPKING:"PumpKing",ARMORED_FROG:"Armored_Frog"};class O{constructor(t){this.game=t,this.animationSheet=0,this.frame=0,this.deleteEnemy=!1,this.invulnerabilityTime=0,this.markedForRecoil=!1,this.recoilSpeeds={Claw:35,Dash:15,Jump:10,Up_Roll:15,Down_Roll:20,Bite:20},this.canBeDebuffed=!1,this.hasBeenDebuffed=!1,this.isDebuffed=!1,this.debuffTimer=0,this.debuffInterval=6500}get enemyName(){return this.constructor.name}isOnGround(){return this.y>=this.game.height-this.height-this.game.groundMargin}tossInAir(){this.velocityY-=45*this.sizeModifier}addOneToEnemiesDefeated(){this.game.player.enemiesDefeated+=this.defeatBonus,this.game.UI.floatingMessages.push(new z({value:`+${this.defeatBonus}`,x:this.x,y:this.y}))}update(t){this.isDebuffed&&(this.debuffTimer>this.debuffInterval?(this.defence+=l,this.game.UI.floatingMessages.push(new z({value:"+ defence RESTORED",x:this.x,y:this.y+100,targetX:this.x,targetY:this.y})),this.isDebuffed=!1,this.game.sfx.defenceUpSFX.play()):this.debuffTimer+=t),this.x-=this.horizontalSpeed+this.game.scrollSpeed,this.x<-this.game.width-this.width&&(this.deleteEnemy=!0),this.frameTimer>this.frameInterval?(this.frameTimer=0,this.frame<this.maxFrame?this.frame++:this.frame=0):this.frameTimer+=t,this.healthPoints<=0&&(this.deleteEnemy=!0),this.updateHitboxes(),this.invulnerabilityTime>0?(this.invulnerabilityTime-=t,this.hitbox.body.isActive=!1):(this.hurtbox.body.isActive=!0,this.hitbox.body.isActive=!0),this.healthBar&&this.healthBar.updatePosition(this.x,this.y)}draw(t){this.healthBar&&this.healthBar.draw(t),this.invulnerabilityTime>0&&(t.save(),t.globalAlpha=.5*Math.random()+.4),t.drawImage(this.image,this.frame*this.spriteWidth,this.animationSheet*this.spriteHeight,this.spriteWidth,this.spriteHeight,this.x,this.y,this.width,this.height),t.restore()}updateHitboxes(){this.hurtbox.body.x=this.x+this.hurtbox.body.xOffset,this.hurtbox.body.y=this.y+this.hurtbox.body.yOffset,this.hitbox.body.x=this.x+this.hitbox.body.xOffset,this.hitbox.body.y=this.y+this.hitbox.body.yOffset}resolveCollision({target:t,attackDamage:i}){t===p.ENEMY&&(this.healthPoints-=i-this.defence,this.markedForRecoil=!0)}}export class AngryEgg extends O{constructor(h){super(h),this.maxFrame=38,this.fps=20,this.frameInterval=1e3/this.fps,this.frameTimer=0,this.sizeModifier=.4*Math.random()+.5,this.healthPoints=50*this.sizeModifier,this.spriteWidth=i,this.spriteHeight=t,this.width=i*this.sizeModifier,this.height=t*this.sizeModifier,this.x=this.game.width,this.y=this.game.height-this.height-this.game.groundMargin,this.defaultHorizontalSpeed=0,this.horizontalSpeed=0,this.defence=Math.round(5*this.sizeModifier+2),this.attackDirection,this.image=this.game.sprite_sheets.enemies.angry_egg,this.src=Math.random()>.5?r:o,this.weight=3*this.sizeModifier,this.velocityY=0,this.defeatBonus=Math.ceil(5*this.sizeModifier),this.healthBar=new c({x:this.x,y:this.y,width:this.width,height:15*this.sizeModifier,maxhealth:this.healthPoints}),this.hurtbox={body:{isActive:!0,xOffset:.17*this.width,yOffset:.2*this.height,x:this.x+this.xOffset,y:this.y+this.yOffset,width:.6*this.width,height:.75*this.height}},this.hitbox={body:{isActive:!0,xOffset:.2*this.width,yOffset:.35*this.height,x:this.x+this.xOffset,y:this.y+this.yOffset,width:.3*this.width,height:.5*this.height}}}update(t){this.frameTimer+t>this.frameInterval&&this.markedForRecoil&&(this.horizontalSpeed-=this.recoilSpeeds[this.attackType],this.healthBar&&this.healthBar.updateBar(this.healthPoints),this.markedForRecoil=!1),super.update(t),this.horizontalSpeed<=0&&(this.horizontalSpeed+=this.weight),this.horizontalSpeed>this.defaultHorizontalSpeed&&(this.horizontalSpeed=this.defaultHorizontalSpeed),this.healthPoints<=0&&(this.game.particles.push(new u({game:this.game,x:this.x+.5*this.width,y:this.y+.5*this.height,sizeModifier:this.sizeModifier,src:this.src})),this.deleteEnemy=!0,this.addOneToEnemiesDefeated()),this.y+=this.velocityY,this.isOnGround()?this.velocityY=0:this.velocityY+=this.weight,!this.hasBeenDebuffed&&this.x<this.game.width-this.width&&(this.canBeDebuffed=!0),this.y>this.game.height-this.height-this.game.groundMargin&&(this.y=this.game.height-this.height-this.game.groundMargin)}resolveCollision({target:t,attackDamage:i,attackType:h}){super.resolveCollision({target:t,attackDamage:i}),this.attackType=h,this.attackType===y.DASH&&this.tossInAir(),t===p.PLAYER&&(this.attackType=y.BITE,this.markedForRecoil=!0,this.healthPoints--)}}export class Crawler extends O{constructor(t){super(t),this.transparency=.95,this.teleportAudio=new Audio("./audio/teleport.wav"),this.animationSheet=1,this.maxFrame=12,this.fps=15,this.frameInterval=1e3/this.fps,this.frameTimer=0,this.sizeModifier=.4*Math.random()+.5,this.healthPoints=55*this.sizeModifier,this.spriteWidth=e,this.spriteHeight=a,this.width=e*this.sizeModifier,this.height=a*this.sizeModifier,this.x=this.game.width,this.y=this.game.height-this.height-this.game.groundMargin,this.leftBound=.5*this.game.player.width+this.game.player.starting_x,this.rightBound=this.game.width-.5*this.width,this.defaultHorizontalSpeed=.5,this.horizontalSpeed=.5,this.defence=Math.round(12*this.sizeModifier+2),this.weight=5*this.sizeModifier,this.image=this.game.sprite_sheets.enemies.crawler,this.src=Math.random()>.5?r:o,this.hurtbox={body:{isActive:!0,xOffset:0,yOffset:.5*this.width,x:this.x+this.xOffset,y:this.y+this.yOffset,width:this.width,height:.45*this.height}},this.hitbox={body:{isActive:!0,xOffset:.06*this.width,yOffset:.65*this.width,x:this.x+this.xOffset,y:this.y+this.yOffset,width:.9*this.width,height:.25*this.height}},this.healthBar=new c({x:this.x,y:this.y,width:this.width,height:20*this.sizeModifier,maxhealth:this.healthPoints}),this.turnsUntilSpawn=3,this.defeatBonus=Math.ceil(10*this.sizeModifier)}update(t){this.frameTimer+t>this.frameInterval&&this.markedForRecoil&&(this.returnToRightBound(),this.healthBar&&this.healthBar.updateBar(this.healthPoints),this.markedForRecoil=!1),super.update(t),this.x<this.leftBound?this.returnToRightBound():this.x>this.rightBound&&(this.x=this.game.width-.5*this.width,this.turnsUntilSpawn>0?this.turnsUntilSpawn--:(this.turnsUntilSpawn=3,this.switchToIdle()),this.transparency=.95,1===this.animationSheet&&(this.horizontalSpeed=this.defaultHorizontalSpeed,this.fps=15,this.hurtbox.body.isActive=!0,this.hitbox.body.isActive=!0)),this.frame===this.maxFrame&&0===this.animationSheet&&this.spawn(),!this.hasBeenDebuffed&&this.x<this.game.width-this.width&&(this.canBeDebuffed=!0),this.healthPoints<=0&&(this.game.particles.push(new u({game:this.game,x:this.x+.5*this.width,y:this.y+.5*this.height,sizeModifier:this.sizeModifier,src:this.src})),this.addOneToEnemiesDefeated())}draw(t){t.save(),t.globalAlpha=this.transparency,super.draw(t),t.restore()}returnToRightBound(){this.teleportAudio.play(),this.horizontalSpeed=-25,this.fps=60,this.transparency=.075,this.hurtbox.body.isActive=!1,this.hitbox.body.isActive=!1}spawn(){let t=Math.floor(7*Math.random()+3);for(let i=0;i<=t;i++)this.game.enemies.push(new Spawn(this.game,this.x+.5*this.width));this.switchToWalking()}switchToIdle(){this.animationSheet=0,this.maxFrame=7,this.horizontalSpeed=0}switchToWalking(){this.animationSheet=1,this.maxFrame=12,this.transparency=.95,this.horizontalSpeed=.5}}export class Spawn extends O{constructor(t,i){super(t),this.transparency=.95,this.healthPoints=20,this.animationSheet=1,this.maxFrame=12,this.fps=15,this.frameInterval=1e3/this.fps,this.frameTimer=0,this.sizeModifier=.2,this.spriteWidth=e,this.spriteHeight=a,this.width=e*this.sizeModifier,this.height=a*this.sizeModifier,this.x=i,this.y=this.game.height-this.height-this.game.groundMargin,this.horizontalSpeed=1*Math.random()+1,this.image=this.game.sprite_sheets.enemies.crawler,this.src=Math.random()>.5?r:o,this.defence=1,this.hurtbox={body:{isActive:!0,xOffset:0,yOffset:.5*this.width,x:this.x+this.xOffset,y:this.y+this.yOffset,width:this.width,height:.45*this.height}},this.hitbox={body:{isActive:!0,xOffset:.06*this.width,yOffset:.65*this.width,x:this.x+this.xOffset,y:this.y+this.yOffset,width:.9*this.width,height:.25*this.height}},this.defeatBonus=1}update(t){super.update(t),this.healthPoints<=0&&(this.game.particles.push(new u({game:this.game,x:this.x+.5*this.width,y:this.y+.5*this.height,sizeModifier:this.sizeModifier,src:this.src})),this.addOneToEnemiesDefeated())}resolveCollision(){this.healthPoints=0}}export class Ghost extends O{constructor(t){super(t),this.healthPoints=20,this.transparency=.2*Math.random()+.3,this.maxFrame=10,this.fps=20,this.frameInterval=1e3/this.fps,this.frameTimer=0,this.sizeModifier=.4*Math.random()+.3,this.spriteWidth=h,this.spriteHeight=s,this.width=h*this.sizeModifier,this.height=s*this.sizeModifier,this.horizontalSpeed=2,this.x=this.game.width,this.y=(this.game.height-this.height-this.game.groundMargin)*Math.random(),this.image=this.game.sprite_sheets.enemies.ghost,this.defence=0,this.angle=0,this.curve=6*Math.random(),this.hurtbox={body:{isActive:!0,xOffset:.1*this.width,yOffset:.1*this.width,x:this.x+this.xOffset,y:this.y+this.yOffset,width:.9*this.width,height:.7*this.height}},this.hitbox={body:{isActive:!0,xOffset:.15*this.width,yOffset:.1*this.height,x:this.x+this.xOffset,y:this.y+this.yOffset,width:.8*this.width,height:.65*this.height}},this.defeatBonus=Math.ceil(5*this.sizeModifier)}update(t){super.update(t),this.healthPoints<=0&&(this.game.particles.push(new x({game:this.game,x:this.x+.5*this.width,y:this.y+.5*this.height,sizeModifier:this.sizeModifier,src:d})),this.addOneToEnemiesDefeated()),this.y+=Math.sin(this.angle)*this.curve,this.angle+=.05}draw(t){t.save(),this.frame%4==0?t.globalAlpha=this.transparency:t.globalAlpha=this.transparency-.1,super.draw(t),t.restore()}resolveCollision({target:t}){t===p.ENEMY&&(this.healthPoints=0)}}export class Bee extends O{constructor(t){super(t),this.healthPoints=20,this.transparency=.2*Math.random()+.3,this.maxFrame=12,this.fps=30,this.frameInterval=1e3/this.fps,this.frameTimer=0,this.sizeModifier=.2*Math.random()+.2,this.spriteWidth=n,this.spriteHeight=f,this.width=n*this.sizeModifier,this.height=f*this.sizeModifier,this.horizontalSpeed=1,this.attackTimer=0,this.attackInterval=1500+500*Math.random(),this.isAttacking=!1,this.isReturning=!1,this.target={x:0,y:0},this.previousPosition={x:0,y:0},this.x=this.game.width,this.y=(this.game.height-this.height-this.game.groundMargin)*Math.random(),this.image=this.game.sprite_sheets.enemies.bee,this.defence=0,this.angle=0,this.curve=6*Math.random(),this.hurtbox={body:{isActive:!0,xOffset:.1*this.width,yOffset:.25*this.width,x:this.x+this.xOffset,y:this.y+this.yOffset,width:.75*this.width,height:.5*this.height}},this.hitbox={body:{isActive:!0,xOffset:.1*this.width,yOffset:.65*this.height,x:this.x+this.xOffset,y:this.y+this.yOffset,width:.5*this.width,height:.3*this.height}},this.defeatBonus=Math.ceil(6*this.sizeModifier)}update(t){super.update(t),this.isAttacking?(this.x+=.05*(this.target.x-this.x),this.y+=.05*(this.target.y-this.y)):(this.x+=3*Math.random()-2.5,this.y+=5*Math.random()-2.5),this.x<=this.target.x+10&&this.isAttacking&&(this.isReturning=!0,this.attackTimer=0),this.previousPosition.x-this.x<20&&this.isReturning&&(this.isReturning=!1,this.attackTimer=0),this.isReturning&&(this.x+=.1*(this.previousPosition.x-this.x),this.y+=.1*(this.previousPosition.y-this.y),this.isAttacking=!1),this.y>this.game.height-this.height-this.game.groundMargin&&(this.y=this.game.height-this.height-this.game.groundMargin),this.attackTimer>=this.attackInterval?(this.isReturning=!1,this.isAttacking=!0,this.attackTimer=0,this.x>this.game.player.x?(this.target.x=this.game.player.x,this.target.y=this.game.player.y+this.game.player.height):(this.target.x,this.previousPosition.x=-this.game.width),this.previousPosition.x=this.x,this.previousPosition.y=this.y):!this.isAttacking&&this.x>this.game.player.x&&(this.attackTimer+=t),this.healthPoints<=0&&(this.game.particles.push(new x({game:this.game,x:this.x+.5*this.width,y:this.y+.5*this.height,sizeModifier:this.sizeModifier,src:g})),this.addOneToEnemiesDefeated())}resolveCollision(){this.healthPoints=0}}export class Pumpkin extends O{constructor(t){super(t),this.fps=30,this.frameInterval=1e3/this.fps,this.frameTimer=0,this.sizeModifier=.4*Math.random()+.5,this.healthPoints=50*this.sizeModifier,this.spriteWidth=0,this.spriteHeight=0,this.width=0,this.height=0,this.defaultHorizontalSpeed=0,this.horizontalSpeed=0,this.defence=Math.round(5*this.sizeModifier+3),this.markedForRecoil=!1,this.explodeXOffset=-120,this.src=Math.random()>.5?r:o,this.weight=3*this.sizeModifier,this.velocityY=0,this.sprite_sheets=this.game.sprite_sheets.enemies.pumpkin,this.states=[new b(this),new M(this),new w(this)],this.audio=new Audio(m),this.currentState=this.states[v.IDLE],this.currentState.enter(),this.x=this.game.width,this.y=this.game.height-this.height-this.game.groundMargin,this.healthBar=new c({x:this.x,y:this.y,width:this.width,height:15*this.sizeModifier,maxhealth:this.healthPoints}),this.hurtbox={body:{isActive:!0,xOffset:.02*this.width,yOffset:.3*this.height,x:this.x+this.xOffset,y:this.y+this.yOffset,width:.95*this.width,height:.7*this.height}},this.hitbox={body:{isActive:!0,xOffset:.02*this.width,yOffset:.55*this.height,x:this.x+this.xOffset,y:this.y+this.yOffset,width:.9*this.width,height:.3*this.height}},this.defeatBonus=Math.ceil(12*this.sizeModifier)}update(t){!this.hasBeenDebuffed&&this.x<this.game.width-this.width&&(this.canBeDebuffed=!0),this.isDebuffed&&(this.debuffTimer>this.debuffInterval?(this.defence+=l,this.game.UI.floatingMessages.push(new z({value:"+ defence RESTORED",x:this.x,y:this.y+100,targetX:this.x,targetY:this.y})),this.isDebuffed=!1,this.game.sfx.defenceUpSFX.play()):this.debuffTimer+=t),this.frameTimer+t>this.frameInterval&&this.markedForRecoil&&(this.horizontalSpeed-=this.recoilSpeeds[this.attackType],this.healthBar?.updateBar(this.healthPoints),this.markedForRecoil=!1),this.horizontalSpeed<=0&&(this.horizontalSpeed+=this.weight),this.horizontalSpeed>this.defaultHorizontalSpeed&&(this.horizontalSpeed=this.defaultHorizontalSpeed),this.y+=this.velocityY,this.isOnGround()?this.velocityY=0:this.velocityY+=this.weight,this.y>this.game.height-this.height-this.game.groundMargin&&(this.y=this.game.height-this.height-this.game.groundMargin),this.x-=this.horizontalSpeed+this.game.scrollSpeed,this.x<-this.game.width-this.width&&(this.deleteEnemy=!0),this.frameTimer>this.frameInterval?(this.frameTimer=0,this.frame<this.maxFrame?this.frame++:this.frame=0):this.frameTimer+=t,this.updateHitboxes(),this.invulnerabilityTime>0?(this.invulnerabilityTime-=t,this.hitbox.body.isActive=!1):"EXPLODE"!==this.currentState.state&&(this.hurtbox.body.isActive=!0,this.hitbox.body.isActive=!0),this.healthBar?.updatePosition(this.x,this.y+this.height-300*this.sizeModifier),this.currentState.update()}setState(t){this.currentState=this.states[t],this.currentState.enter()}resolveCollision({target:t,attackDamage:i,attackType:h}){super.resolveCollision({target:t,attackDamage:i}),this.healthPoints<=0&&(this.setState(v.EXPLODE),this.audio.play(),delete this.healthBar,this.addOneToEnemiesDefeated()),this.attackType=h,this.attackType===y.DASH&&this.tossInAir(),t===p.PLAYER&&(this.attackType=y.BITE,this.markedForRecoil=!0,this.healthPoints--)}resetBoxes(){this.hurtbox&&(this.hurtbox.body.height=.7*this.height),this.hitbox&&(this.hitbox.body.height="IDLE"===this.currentState.state?.3*this.height:.35*this.height)}isWithinRetreatingRange(){return this.x<.5*this.game.width&&this.x>this.game.player.x}}