import{setSfxVolume as t}from"./utils.js";import{DEFAULT_SCROLL_SPEED as i,DEFAULT_WEIGHT as h,INVULNERABILITY_TIME as s,SOUND_BOUNCE as e,SOUND_CLAW_STRIKE as a,SOUND_DASH as o,SOUND_DODGE as n,SOUND_GET_HIT as r,SOUND_LAND as l,SOUND_SHATTER as g,SOUND_SLASH as x,SOUND_SNARE as u,SOUND_UPROLL as d,SOUND_WIN as b,SPRITE_HEIGHT as m,SPRITE_WIDTH as c,STARTING_X as y,AttackTarget as w,AttackTypes as f,SOUND_DING as _}from"./constants.js";import{Attacking_Claw as p,Falling as A,Game_Over as k,Get_Hit as v,Attacking_Dash as O,Idle as R,Jumping as S,Resting as C,Roll_Down as G,Roll_Up as M,Roll_Across as T,Roll_Back as I,Running as L,Sleeping as E,Ending_Resting as D,Ending_Sleeping as H,states as F}from"./states.js";import{Boom as P,Hit_V1 as U,Hit_V2 as Y,Red_Hit_V1 as j,Red_Hit_V2 as W}from"./particles.js";import{EnemyNames as N}from"./enemies.js";export class Player{constructor(i){this.game=i,this.width=c,this.height=m,this.x=y,this.y=this.game.height-this.height-this.game.groundMargin,this.starting_x=y,this.image=this.game.sprite_sheets.player,this.frame=0,this.maxFrame=11,this.animationSheet=9,this.fps=30,this.frameInterval=1e3/this.fps,this.frameTimer=0,this.deltaTime=0,this.isWhiffing=!0,this.isGameOver=!1,this.invulnerabilityTime=0,this.stickyMultiplier=0,this.base_damage={claw:25,dash:15,jump:15,up_roll:15,down_roll:20},this.min_attack_bonus=0,this.min_dash_bonus=0,this.max_attack_bonus=this.min_attack_bonus+5,this.attack_bonus=this.min_attack_bonus,this.dash_bonus=this.min_dash_bonus,this.max_dash_bonus=this.min_dash_bonus+5,this.dash_bonus_interval=250,this.dash_bonus_timer=0,this.hurtbox={body:{isActive:!0,xOffset:25,yOffset:40,x:this.x+25,y:this.y+40,width:this.width-60,height:this.height-40},head:{isActive:!0,xOffset:38,yOffset:20,x:this.x+38,y:this.y+20,width:this.width-65,height:this.height-40}},this.hitbox={isActive:!1,xOffset:40,yOffset:50,x:this.x+this.xOffset,y:this.y+this.yOffset,width:this.width,height:this.height},this.audio={slash:new Audio(x),up_roll:new Audio(d),dash:new Audio(o),dodge:new Audio(n),claw_strike:new Audio(a),down_roll:new Audio(u),get_hit:new Audio(r),bounce:new Audio(e),land:new Audio(l),win:new Audio(b),ding:new Audio(_)},t(this.audio),this.velocityY=0,this.weight=h,this.states=[new p(this),new A(this),new k(this),new v(this),new O(this),new R(this),new S(this),new C(this),new M(this),new G(this),new T(this),new I(this),new L(this),new E(this),new D(this),new H(this)],this.currentState=this.states[F.IDLE],this.currentState.enter(),this.enemiesDefeated=0}update(t,h){this.deltaTime=t,this.currentState.handleInput(h,t),this.invulnerabilityTime>0&&(this.hurtbox.head.isActive=!1,this.hurtbox.body.isActive=!1,this.invulnerabilityTime-=t),this.stickyMultiplier>0&&this.callStickyFunction(),this.x<y?this.x=y:this.x>.5*this.game.width-this.width&&(this.x=.5*this.game.width-this.width,this.game.scrollSpeed=2*i),this.y+=this.velocityY,!this.isOnGround()&&this.isRollingDown()?this.velocityY+=8*this.weight:!this.isOnGround()&&this.isRollingUp()?this.velocityY+=2*this.weight:this.isOnGround()?this.velocityY=0:(this.velocityY+=this.weight,this.x+=.02*this.game.scrollSpeed),this.y>this.game.height-this.height-this.game.groundMargin&&(this.y=this.game.height-this.height-this.game.groundMargin),this.y<=this.game.y&&(this.y=this.game.y),this.frameTimer>this.frameInterval?(this.frameTimer=0,this.frame<this.maxFrame?this.frame++:this.frame=0):this.frameTimer+=t,this.isClawing()&&this.frame>=8&&this.isWhiffing?(this.hitbox.isActive=!0,this.hitbox.xOffset=70,this.hitbox.yOffset=15,this.hitbox.width=this.width-70,this.hitbox.height=this.height-20):this.isRollingDown()||this.isRollingUp()?(this.hitbox.isActive=!0,this.hitbox.xOffset=20,this.hitbox.yOffset=15,this.hitbox.width=this.width-40,this.hitbox.height=this.height-25):this.isDashAttacking()&&this.frame>=9?(this.hitbox.isActive=!0,this.hitbox.xOffset=70,this.hitbox.yOffset=15,this.hitbox.width=this.width-70,this.hitbox.height=this.height-20):this.isFalling()?(this.hitbox.isActive=!0,this.hitbox.xOffset=20,this.hitbox.yOffset=40,this.hitbox.width=this.width-70,this.hitbox.height=this.height-40):this.hitbox.isActive=!1,this.updateHitboxes(),this.hitbox.isActive&&this.checkAttackCollision(),(this.hurtbox.body.isActive||this.hurtbox.head.isActive)&&this.checkHitCollision()}draw(t){t.drawImage(this.image,this.animationSheet*this.width,this.frame*this.height,this.width,this.height,this.x,this.y,this.width,this.height)}updateHitboxes(){this.hurtbox.body.x=this.x+this.hurtbox.body.xOffset,this.hurtbox.body.y=this.y+this.hurtbox.body.yOffset,this.hurtbox.head.x=this.x+this.hurtbox.head.xOffset,this.hurtbox.head.y=this.y+this.hurtbox.head.yOffset,this.hitbox.x=this.x+this.hitbox.xOffset,this.hitbox.y=this.y+this.hitbox.yOffset}setState(t){this.currentState=this.states[t],this.isWhiffing=!0,this.currentState.enter()}isOnGround(){return this.y>=this.game.height-this.height-this.game.groundMargin}isRollingUp(){return this.currentState===this.states[F.ROLL_UP]}isFalling(){return this.currentState===this.states[F.FALLING]}isRollingDown(){return this.currentState===this.states[F.ROLL_DOWN]}isRollingAcross(){return this.currentState===this.states[F.ROLL_ACROSS]}isRollingBack(){return this.currentState===this.states[F.ROLL_BACK]}isClawing(){return this.currentState===this.states[F.CLAW_ATTACK]}isDashAttacking(){return this.currentState===this.states[F.DASH_ATTACK]}skipCollisionCheck(){return this.invulnerabilityTime>0||this.currentState===this.states[F.GET_HIT]}callStickyFunction(){this.stickyMultiplier>0&&(this.game.stickyFriction(this.stickyMultiplier),this.stickyMultiplier--)}getAttackInfo(){return this.isClawing()?(this.audio.claw_strike.play(),{type:f.CLAW,damage:this.base_damage.claw+this.attack_bonus}):this.isDashAttacking()?(this.audio.dash.play(),{type:f.DASH,damage:this.base_damage.dash+this.dash_bonus+this.attack_bonus}):this.isRollingUp()?{type:f.UP_ROLL,damage:this.base_damage.up_roll+this.attack_bonus}:this.isRollingDown()?{type:f.DOWN_ROLL,damage:this.base_damage.down_roll+this.attack_bonus}:{type:f.JUMP,damage:this.base_damage.jump+this.attack_bonus}}resolvePlayerGettingHit(t){if(this.setState(F.GET_HIT),t.resolveCollision({target:w.PLAYER}),t.enemyName===N.ARMORED_FROG){let t=this.game.UI.progressIcons.pop();t&&this.game.particles.push(new P({game:this.game,x:t.x+.5*t.width,y:t.y+.5*t.height,sizeModifier:.5,src:g}))}this.game.UI.progressIcons.length||this.setState(F.GAME_OVER)}resolveEnemyGettingHit(t,i){const{type:h,damage:s}=this.getAttackInfo();this.stickyMultiplier=5;let e=t.enemyName,a=.05*s;t.resolveCollision({target:w.ENEMY,attackDamage:s,attackType:h}),this.setAfterCollisionParameters(t,i),e===N.ANGRY_EGG?this.game.particles.push(new U({game:this.game,x:this.hitbox.x+this.hitbox.width,y:this.hitbox.y+.5*this.hitbox.height,sizeModifier:a,src:null})):e===N.CRAWLER?this.game.particles.push(new Y({game:this.game,x:this.hitbox.x+this.hitbox.width,y:this.hitbox.y+.5*this.hitbox.height,sizeModifier:a,src:null})):e===N.ARMORED_FROG&&(this.isClawing()?this.game.particles.push(new j({game:this.game,x:this.hitbox.x+this.hitbox.width,y:this.hitbox.y+.5*this.hitbox.height,sizeModifier:a,src:null})):this.game.particles.push(new W({game:this.game,x:this.hitbox.x+this.hitbox.width,y:this.hitbox.y+.5*this.hitbox.height,sizeModifier:a,src:null})))}setAfterCollisionParameters(t,i){i.isActive=!1,t.invulnerabilityTime=s,this.invulnerabilityTime=s,this.isWhiffing=!1,this.hurtbox.body.isActive=!1,this.hurtbox.head.isActive=!1,this.attack_bonus<this.max_attack_bonus&&this.attack_bonus++,(this.isFalling()||this.isRollingDown())&&(this.velocityY=0,this.setState(F.JUMPING),this.attack_bonus>5&&Math.random()>.5?this.audio.bounce.play():this.audio.land.play())}enemyIsGettingHit(t){return t.isActive&&this.hitbox.isActive&&this.hitbox.x<=t.x+t.width&&this.hitbox.x+this.hitbox.width>=t.x&&this.hitbox.y<=t.y+t.height&&this.hitbox.y+this.hitbox.height>=t.y}playerIsGettingHit(t){return t.isActive&&(t.x<=this.hurtbox.body.x+this.hurtbox.body.width||t.x<=this.hurtbox.head.x+this.hurtbox.head.width)&&(t.x+t.width>=this.hurtbox.body.x||t.x+t.width>=this.hurtbox.head.x)&&(t.y<=this.hurtbox.body.y+this.hurtbox.body.height||t.y<=this.hurtbox.head.y+this.hurtbox.head.height)&&(t.y+t.height>=this.hurtbox.body.y||t.y+t.height>=this.hurtbox.head.y)}checkHitCollision(){this.skipCollisionCheck()||this.game.enemies.forEach((t=>{Object.values(t.hitbox).forEach((i=>{this.skipCollisionCheck()||this.playerIsGettingHit(i)&&this.resolvePlayerGettingHit(t)}))}))}checkAttackCollision(){this.game.enemies.forEach((t=>{Object.values(t.hurtbox).forEach((i=>{t.invulnerabilityTime>0||this.enemyIsGettingHit(i)&&this.resolveEnemyGettingHit(t,i)}))}))}isAtStartingPosition(){return this.x<=y}}